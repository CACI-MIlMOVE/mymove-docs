"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[4882],{2741:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));n(8209);const s={sidebar_position:1,id:"index"},i="Pull Request Process",o={unversionedId:"about/processes/caci/index",id:"about/processes/caci/index",title:"Pull Request Process",description:"Branch Creation",source:"@site/docs/about/processes/caci/merge-request.md",sourceDirName:"about/processes/caci",slug:"/about/processes/caci/index",permalink:"/mymove-docs/docs/about/processes/caci/index",draft:!1,editUrl:"https://github.com/caci-milmove/mymove-docs/edit/main/docs/about/processes/caci/merge-request.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"index"},sidebar:"aboutSidebar",previous:{title:"TSP Award Queue",permalink:"/mymove-docs/docs/about/development/tsp-award-queue"},next:{title:"Project Layout",permalink:"/mymove-docs/docs/about/project-layout"}},l={},c=[{value:"Branch Creation",id:"branch-creation",level:2},{value:"_Truss Branches",id:"_truss-branches",level:2},{value:"Merge Requests",id:"merge-requests",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pull-request-process"},"Pull Request Process"),(0,r.kt)("h2",{id:"branch-creation"},"Branch Creation"),(0,r.kt)("p",null,"CACI will create a branch off of main with the backlog name following the ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****")," naming convention. This branch will directly tie to backlogs created in Agility."),(0,r.kt)("h2",{id:"_truss-branches"},"_Truss Branches"),(0,r.kt)("p",null,"When the main ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****")," branch is ready to merge. The developer will create a new branch off of main named ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****_Truss"),"."),(0,r.kt)("h2",{id:"merge-requests"},"Merge Requests"),(0,r.kt)("p",null,"Then the developer will open a new merge request:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"B-****")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****_Truss")),(0,r.kt)("p",null,"This pull request will be reviewed internally. When all internal checks and comments have succeeded the ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****")," branch will merge into ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****_Truss"),"."),(0,r.kt)("p",null,"Then the developer will open a new merge request."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"B-****_Truss")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"main(truss)")),(0,r.kt)("p",null,"Once this merge request has been approved and merged into the main ",(0,r.kt)("inlineCode",{parentName:"p"},"truss")," branch. The developer will then sync the ",(0,r.kt)("inlineCode",{parentName:"p"},"CACI main")," branch with the changes from truss."),(0,r.kt)("p",null,"The developer will be responsible to manage merge conflicts that come from merging ",(0,r.kt)("inlineCode",{parentName:"p"},"main(truss)")," into ",(0,r.kt)("inlineCode",{parentName:"p"},"main(caci)"),"."))}u.isMDXComponent=!0}}]);