"use strict";(self.webpackChunkmymove_docs=self.webpackChunkmymove_docs||[]).push([[8138],{82758:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=t(87462),r=(t(67294),t(3905));t(8209);const i={sidebar_position:1,id:"index"},a="Pull Request Process",o={unversionedId:"processes/caci/index",id:"processes/caci/index",title:"Pull Request Process",description:"Branch Creation",source:"@site/docs/processes/caci/merge-request.md",sourceDirName:"processes/caci",slug:"/processes/caci/index",permalink:"/mymove-docs/docs/processes/caci/index",draft:!1,editUrl:"https://github.com/transcom/mymove-docs/edit/main/docs/processes/caci/merge-request.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"index"}},l={},c=[{value:"Branch Creation",id:"branch-creation",level:2},{value:"_Truss Branches",id:"_truss-branches",level:2},{value:"Merge Requests",id:"merge-requests",level:2}],p={toc:c},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,s.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pull-request-process"},"Pull Request Process"),(0,r.kt)("h2",{id:"branch-creation"},"Branch Creation"),(0,r.kt)("p",null,"CACI will create a branch off of main with the backlog name following the ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****")," naming convention. This branch will directly tie to backlogs created in Agility."),(0,r.kt)("h2",{id:"_truss-branches"},"_Truss Branches"),(0,r.kt)("p",null,"When the main ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****")," branch is ready to merge. The developer will create a new branch off of main named ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****_Truss"),"."),(0,r.kt)("h2",{id:"merge-requests"},"Merge Requests"),(0,r.kt)("p",null,"Then the developer will open a new merge request:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"B-****")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****_Truss")),(0,r.kt)("p",null,"This pull request will be reviewed internally. When all internal checks and comments have succeeded the ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****")," branch will merge into ",(0,r.kt)("inlineCode",{parentName:"p"},"B-****_Truss"),"."),(0,r.kt)("p",null,"Then the developer will open a new merge request."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"B-****_Truss")," -> ",(0,r.kt)("inlineCode",{parentName:"p"},"main(truss)")),(0,r.kt)("p",null,"Once this merge request has been approved and merged into the main ",(0,r.kt)("inlineCode",{parentName:"p"},"truss")," branch. The developer will then sync the ",(0,r.kt)("inlineCode",{parentName:"p"},"CACI main")," branch with the changes from truss."),(0,r.kt)("p",null,"The developer will be responsible to manage merge conflicts that come from merging ",(0,r.kt)("inlineCode",{parentName:"p"},"main(truss)")," into ",(0,r.kt)("inlineCode",{parentName:"p"},"main(caci)"),"."))}m.isMDXComponent=!0}}]);